####################################################################
[ req ]
default_bits        = 4096
default_keyfile     = ssl/private/ca.pem
distinguished_name  = req_distinguished_name
encrypt_rsa_key     = yes
default_md          = sha1
prompt              = no

[ req_distinguished_name ]
countryName         = HR

organizationName    = TRONIUS Gaming

commonName          = TRONIUS Gaming CA

####################################################################
[ ca ]
default_ca         = CA_default        # The default ca section

####################################################################
[ CA_default ]

dir                = ssl                     # Where everything is kept
certs              = $dir/certs              # Where the issued certs are kept
crl_dir            = $dir/crl                # Where the issued crl are kept
database           = $dir/index.txt          # database index file.
unique_subject     = yes                     # Set to 'no' to allow creation of
                                             # several certificates with same subject.
new_certs_dir      = $dir/newcerts           # default place for new certs.

certificate        = $dir/ca.pem             # The CA certificate
serial             = $dir/serial             # The current serial number
crl                = $dir/crl.pem            # The current CRL
certificate	       = $dir/certs/cacert.pem   # The private certificate
private_key        = $dir/private/cakey.pem  # The private key
RANDFILE           = $dir/private/.rand      # private random number file

name_opt           = ca_default              # Subject Name options
cert_opt           = ca_default              # Certificate field options

default_days       = 365                     # how long to certify for
default_crl_days   = 30                      # how long before next CRL
default_md         = sha256                  # which md to use.
preserve           = no                      # keep passed DN ordering
copy_extensions    = copy                    # copy SANs from CSR to cert

policy             = policy_anything

[ policy_anything ]
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

[ signing_req ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature, keyEncipherment
